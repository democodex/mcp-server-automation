[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-server-automation"
version = "1.0.0"
description = "CLI tool to automate MCP server deployment to AWS ECS and Google Cloud Run with optional provider-specific dependencies"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Bingjiao Yu", email = "bingjiao@amazon.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "docker>=6.0.0",
    "requests>=2.25.0",
    "jinja2>=3.0.0",
    "toml>=0.10.0",
]

[project.scripts]
mcp-server-automation = "mcp_server_automation.__main__:main"

[project.urls]
Homepage = "https://github.com/aws-samples/sample-mcp-server-automation"
Repository = "https://github.com/aws-samples/sample-mcp-server-automation"
Issues = "https://github.com/aws-samples/sample-mcp-server-automation/issues"

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
]

# Cloud provider specific dependencies
aws = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
]
gcp = [
    "google-cloud-run>=0.9.0",
    "google-cloud-artifact-registry>=1.9.0",
    "google-auth>=2.0.0",
    "google-cloud-logging>=3.0.0",
]

# Multi-cloud support (includes all provider dependencies)
all = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
    "google-cloud-run>=0.9.0",
    "google-cloud-artifact-registry>=1.9.0",
    "google-auth>=2.0.0",
    "google-cloud-logging>=3.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["mcp_server_automation"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true